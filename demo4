<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Member Information Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
            color: white;
            overflow-x: hidden;
            min-height: 100vh;
        }

        /* Animated background particles */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 2px;
            height: 2px;
            background: #8a2be2;
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) translateX(0px); opacity: 0.3; }
            50% { transform: translateY(-20px) translateX(10px); opacity: 1; }
        }

        /* Header */
        .header {
            position: relative;
            z-index: 10;
            text-align: center;
            padding: 2rem 2rem 1rem;
            background: linear-gradient(45deg, rgba(138, 43, 226, 0.1), rgba(255, 0, 150, 0.1));
        }

        .title {
            font-size: 3rem;
            font-weight: 900;
            background: linear-gradient(45deg, #8a2be2, #ff0096, #00d4ff);
            background-size: 200% 200%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: gradientShift 3s ease-in-out infinite;
            margin-bottom: 0.5rem;
            text-shadow: 0 0 30px rgba(138, 43, 226, 0.5);
        }

        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .subtitle {
            font-size: 1.2rem;
            color: #8a2be2;
            font-weight: 300;
            letter-spacing: 1px;
            margin-bottom: 1rem;
        }

        /* Main Layout */
        .main-container {
            position: relative;
            z-index: 10;
            display: flex;
            gap: 2rem;
            padding: 2rem;
            max-width: 1400px;
            margin: 0 auto;
            align-items: flex-start;
        }

        /* Input Controls */
        .controls {
            flex: 0 0 350px;
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.02));
            border: 1px solid rgba(138, 43, 226, 0.2);
            border-radius: 20px;
            padding: 2rem;
            backdrop-filter: blur(10px);
            height: fit-content;
        }

        .controls-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #00d4ff;
            margin-bottom: 1rem;
            text-align: center;
        }

        .input-group {
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        .input-label {
            font-size: 1.1rem;
            color: #8a2be2;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .input-field, .select-field {
            background: rgba(26, 26, 46, 0.9);
            border: 2px solid rgba(138, 43, 226, 0.5);
            border-radius: 15px;
            padding: 1rem 1.5rem;
            color: white;
            font-size: 1rem;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .input-field:focus, .select-field:focus {
            outline: none;
            border-color: #8a2be2;
            box-shadow: 0 0 20px rgba(138, 43, 226, 0.5);
            background: rgba(26, 26, 46, 1);
        }

        .select-field option {
            background: #1a1a2e;
            color: white;
            padding: 0.5rem;
        }

        .submit-button {
            background: linear-gradient(45deg, #8a2be2, #ff0096);
            border: none;
            border-radius: 25px;
            color: white;
            font-weight: 600;
            font-size: 1.1rem;
            padding: 1rem 2rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(138, 43, 226, 0.3);
            width: 100%;
            margin-top: 1rem;
        }

        /* Content Area */
        .content-area {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }

        /* Demographics Section */
        .demographics-section {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.02));
            border: 1px solid rgba(138, 43, 226, 0.2);
            border-radius: 20px;
            padding: 2rem;
            backdrop-filter: blur(10px);
            opacity: 0;
            transition: all 0.5s ease;
            transform: translateX(20px);
        }

        .demographics-section.show {
            opacity: 1;
            transform: translateX(0);
        }

        .submit-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(138, 43, 226, 0.4);
        }

        .submit-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        /* Results Container */
        .results-container {
            opacity: 0;
            transition: all 0.5s ease;
            transform: translateY(20px);
        }

        .results-container.show {
            opacity: 1;
            transform: translateY(0);
        }

        .demographics-section, .summary-section {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.02));
            border: 1px solid rgba(138, 43, 226, 0.2);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            backdrop-filter: blur(10px);
        }

        .section-title {
            font-size: 1.8rem;
            font-weight: 700;
            color: #00d4ff;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .demographics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
        }

        .demo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.8rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            border-left: 4px solid #8a2be2;
        }

        .demo-label {
            color: #ccc;
            font-weight: 500;
        }

        .demo-value {
            color: #00d4ff;
            font-weight: 700;
        }

        .summary-content {
            font-size: 1.1rem;
            line-height: 1.6;
            color: #e0e0e0;
        }

        .summary-content ul {
            padding-left: 1.5rem;
            margin: 1rem 0;
        }

        .summary-content li {
            margin-bottom: 0.8rem;
            color: #ccc;
        }

        .summary-content strong {
            color: #00d4ff;
        }

        /* Loading Animation */
        .loading {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 3rem;
            text-align: center;
        }

        .loading-spinner {
            width: 60px;
            height: 60px;
            border: 4px solid rgba(138, 43, 226, 0.3);
            border-top: 4px solid #8a2be2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 1rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .loading-text {
            font-size: 1.2rem;
            color: #8a2be2;
            margin-bottom: 0.5rem;
        }

        .loading-subtext {
            font-size: 0.9rem;
            color: #666;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .main-container {
                flex-direction: column;
                gap: 2rem;
            }

            .controls {
                flex: none;
                max-width: none;
            }

            .demographics-section.show {
                transform: translateY(0);
            }
        }

        @media (max-width: 768px) {
            .title {
                font-size: 2rem;
            }

            .main-container {
                padding: 1rem;
            }

            .controls {
                padding: 1.5rem;
            }

            .demographics-grid {
                grid-template-columns: 1fr;
            }

            .demographics-section, .summary-section {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background Particles -->
    <div class="particles"></div>

    <!-- Header -->
    <div class="header">
        <h1 class="title">Member Information Dashboard</h1>
        <p class="subtitle">Intelligent Member Data Analysis & Insights</p>
    </div>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Input Controls -->
        <div class="controls">
            <h2 class="controls-title">Member Lookup</h2>
            
            <div class="input-group">
                <label class="input-label" for="memberSelect">Select Member ID:</label>
                <select id="memberSelect" class="select-field">
                    <option value="">Choose a member...</option>
                    <option value="MBR001">MBR001 - Sarah Johnson</option>
                    <option value="MBR002">MBR002 - Michael Chen</option>
                    <option value="MBR003">MBR003 - Emily Rodriguez</option>
                </select>
            </div>

            <div class="input-group">
                <label class="input-label" for="promptSelect">Prompt:</label>
                <select id="promptSelect" class="select-field">
                    <option value="">Choose a prompt...</option>
                </select>
            </div>

            <button id="submitBtn" class="submit-button">Generate Analysis</button>
        </div>

        <!-- Content Area -->
        <div class="content-area">
            <!-- Demographics Section -->
            <div id="demographicsSection" class="demographics-section">
                <h2 class="section-title">Member Demographics</h2>
                <div class="demographics-grid" id="demographicsGrid">
                    <div style="text-align: center; color: #666; padding: 2rem;">
                        Select a member to view demographics
                    </div>
                </div>
            </div>

            <!-- Analysis Results -->
            <div id="resultsContainer" class="results-container">
                <div class="summary-section">
                    <h2 class="section-title">AI-Generated Analysis</h2>
                    <div class="summary-content" id="summaryContent">
                        <div style="text-align: center; color: #666; padding: 2rem;">
                            Select a member and analysis type to generate insights
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Member data stored in JSON format
        const memberData = {
            "MBR001": {
                demographics: {
                    name: "Sarah Johnson",
                    phone: "(555) 123-4567",
                    email: "sarah.johnson@email.com",
                    address: "123 Oak Street, Springfield, IL 62701",
                    age: 34,
                    gender: "Female",
                    policyId: "POL-2024-001",
                    effectiveDate: "2024-01-15",
                    expirationDate: "2025-01-14"
                },
                prompts: {
                    "What is Sarah's current health risk assessment?": {
                        summary: `
                            <strong>Comprehensive Health Risk Assessment for Sarah Johnson</strong>
                            <ul>
                                <li><strong>Overall Risk Level:</strong> Moderate - Patient shows manageable risk factors with good preventive care compliance</li>
                                <li><strong>Primary Risk Factors:</strong> Family history of cardiovascular disease, sedentary lifestyle, and mild hypertension</li>
                                <li><strong>Protective Factors:</strong> Non-smoker, moderate alcohol consumption, regular check-ups, and healthy BMI</li>
                                <li><strong>Chronic Conditions:</strong> Mild hypertension (controlled with medication), seasonal allergies</li>
                                <li><strong>Recommended Actions:</strong> Increase physical activity to 150 minutes per week, continue blood pressure monitoring, schedule annual cardiology screening</li>
                                <li><strong>Preventive Care Status:</strong> Up to date on mammography, cervical cancer screening, and immunizations</li>
                                <li><strong>Medication Adherence:</strong> Excellent - 95% compliance with prescribed antihypertensive medication</li>
                                <li><strong>Lifestyle Modifications:</strong> Consider stress management techniques and dietary consultation for sodium reduction</li>
                            </ul>
                        `
                    },
                    "How can we optimize Sarah's insurance coverage?": {
                        summary: `
                            <strong>Coverage Optimization Analysis for Sarah Johnson</strong>
                            <ul>
                                <li><strong>Current Plan Utilization:</strong> 78% of available benefits utilized, indicating good engagement with healthcare services</li>
                                <li><strong>Cost Efficiency:</strong> Member demonstrates optimal use of in-network providers, saving approximately $2,400 annually</li>
                                <li><strong>Underutilized Benefits:</strong> Wellness programs, mental health services, and preventive dental care opportunities available</li>
                                <li><strong>Predicted Annual Costs:</strong> $3,200 based on current health trends and utilization patterns</li>
                                <li><strong>Recommended Plan Adjustments:</strong> Consider upgrading to premium plan for enhanced specialist coverage given cardiovascular risk</li>
                                <li><strong>Savings Opportunities:</strong> Generic medication substitutions could save $180 annually</li>
                                <li><strong>Value-Added Services:</strong> Eligible for health coaching program and fitness center membership discount</li>
                                <li><strong>Future Considerations:</strong> Plan renewal timing aligns well with anticipated increased healthcare needs</li>
                            </ul>
                        `
                    }
                }
            },
            "MBR002": {
                demographics: {
                    name: "Michael Chen",
                    phone: "(555) 987-6543",
                    email: "michael.chen@email.com",
                    address: "456 Pine Avenue, Denver, CO 80202",
                    age: 42,
                    gender: "Male",
                    policyId: "POL-2024-002",
                    effectiveDate: "2024-03-01",
                    expirationDate: "2025-02-28"
                },
                prompts: {
                    "What is Michael's chronic disease management status?": {
                        summary: `
                            <strong>Chronic Disease Management Plan for Michael Chen</strong>
                            <ul>
                                <li><strong>Primary Conditions:</strong> Type 2 Diabetes (diagnosed 2019), mild osteoarthritis in knees</li>
                                <li><strong>Glycemic Control:</strong> HbA1c at 7.2% - slight improvement needed to reach target of <7%</li>
                                <li><strong>Medication Regimen:</strong> Metformin 500mg twice daily, occasional NSAIDs for joint pain</li>
                                <li><strong>Complications Screening:</strong> Annual eye exam scheduled, no current signs of diabetic retinopathy or neuropathy</li>
                                <li><strong>Lifestyle Management:</strong> Following low-carb diet, exercises 3x weekly, lost 15 pounds in past year</li>
                                <li><strong>Monitoring Schedule:</strong> Quarterly A1C tests, daily glucose monitoring, monthly weight checks</li>
                                <li><strong>Risk Mitigation:</strong> Blood pressure within normal range, cholesterol managed with lifestyle modifications</li>
                                <li><strong>Support Services:</strong> Enrolled in diabetes education program, nutritionist consultations quarterly</li>
                            </ul>
                        `
                    },
                    "What preventive care does Michael need?": {
                        summary: `
                            <strong>Preventive Care Strategy for Michael Chen</strong>
                            <ul>
                                <li><strong>Age-Appropriate Screenings:</strong> Due for colonoscopy (age 42), prostate screening discussion recommended</li>
                                <li><strong>Cardiovascular Prevention:</strong> Annual lipid panel, blood pressure monitoring, stress testing consideration</li>
                                <li><strong>Diabetes-Related Prevention:</strong> Diabetic eye exam, foot care assessment, kidney function monitoring</li>
                                <li><strong>Immunization Status:</strong> Up to date on COVID-19, flu shot scheduled for fall, Tdap current</li>
                                <li><strong>Cancer Screening:</strong> Skin cancer screening recommended due to family history</li>
                                <li><strong>Bone Health:</strong> DEXA scan recommended given osteoarthritis and diabetes risk factors</li>
                                <li><strong>Mental Health:</strong> Annual depression screening, stress management resources available</li>
                                <li><strong>Wellness Goals:</strong> Continue weight management, increase physical activity, smoking cessation maintenance</li>
                            </ul>
                        `
                    }
                }
            },
            "MBR003": {
                demographics: {
                    name: "Emily Rodriguez",
                    phone: "(555) 456-7890",
                    email: "emily.rodriguez@email.com",
                    address: "789 Maple Drive, Austin, TX 78701",
                    age: 28,
                    gender: "Female",
                    policyId: "POL-2024-003",
                    effectiveDate: "2024-06-01",
                    expirationDate: "2025-05-31"
                },
                prompts: {
                    "What wellness opportunities are available for Emily?": {
                        summary: `
                            <strong>Wellness & Prevention Plan for Emily Rodriguez</strong>
                            <ul>
                                <li><strong>Current Health Status:</strong> Excellent overall health with no chronic conditions, active lifestyle</li>
                                <li><strong>Reproductive Health:</strong> Regular gynecological care, family planning counseling available</li>
                                <li><strong>Fitness Profile:</strong> Runs 4x weekly, participates in yoga, maintains healthy BMI of 22</li>
                                <li><strong>Nutritional Status:</strong> Follows Mediterranean diet, adequate vitamin D and B12 levels</li>
                                <li><strong>Preventive Screenings:</strong> Annual wellness exam, cervical cancer screening current, breast self-exam education</li>
                                <li><strong>Mental Health Support:</strong> Stress management through exercise and mindfulness, no current concerns</li>
                                <li><strong>Workplace Wellness:</strong> Eligible for standing desk, fitness reimbursement, healthy lunch programs</li>
                                <li><strong>Future Planning:</strong> Genetic counseling available for family planning, travel health consultations</li>
                            </ul>
                        `
                    },
                    "How does Emily's career impact her health?": {
                        summary: `
                            <strong>Career Health Impact Analysis for Emily Rodriguez</strong>
                            <ul>
                                <li><strong>Occupational Health:</strong> Desk job with minimal physical demands, some eye strain from computer work</li>
                                <li><strong>Work-Life Balance:</strong> Good balance maintained, uses vacation time regularly for stress relief</li>
                                <li><strong>Ergonomic Assessment:</strong> Workstation setup adequate, standing desk option recommended</li>
                                <li><strong>Stress Factors:</strong> Moderate work stress managed through exercise and time management</li>
                                <li><strong>Career Advancement Health:</strong> Leadership training includes stress management and resilience building</li>
                                <li><strong>Commute Impact:</strong> 30-minute commute via public transport, incorporates walking for exercise</li>
                                <li><strong>Professional Development:</strong> Continuing education supported, flexible schedule for health appointments</li>
                                <li><strong>Long-term Considerations:</strong> Career growth plan includes health and wellness goal integration</li>
                            </ul>
                        `
                    }
                }
            }
        };

        // DOM elements
        const memberSelect = document.getElementById('memberSelect');
        const promptSelect = document.getElementById('promptSelect');
        const submitBtn = document.getElementById('submitBtn');
        const demographicsSection = document.getElementById('demographicsSection');
        const resultsContainer = document.getElementById('resultsContainer');
        const demographicsGrid = document.getElementById('demographicsGrid');
        const summaryContent = document.getElementById('summaryContent');

        // Create animated particles
        function createParticles() {
            const particlesContainer = document.querySelector('.particles');
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.top = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 6 + 's';
                particle.style.animationDuration = (Math.random() * 3 + 3) + 's';
                particlesContainer.appendChild(particle);
            }
        }

        // Update prompt options and show demographics when member is selected
        function updatePromptOptions() {
            const selectedMember = memberSelect.value;
            promptSelect.innerHTML = '<option value="">Choose a prompt...</option>';
            
            if (selectedMember && memberData[selectedMember]) {
                // Show demographics immediately
                displayDemographics(selectedMember);
                demographicsSection.classList.add('show');
                
                // Populate prompt options
                const prompts = Object.keys(memberData[selectedMember].prompts);
                prompts.forEach(prompt => {
                    const option = document.createElement('option');
                    option.value = prompt;
                    option.textContent = prompt;
                    promptSelect.appendChild(option);
                });
                
                // Reset analysis section
                summaryContent.innerHTML = `
                    <div style="text-align: center; color: #666; padding: 2rem;">
                        Select a prompt to generate insights
                    </div>
                `;
                resultsContainer.classList.remove('show');
            } else {
                // Hide demographics when no member selected
                demographicsSection.classList.remove('show');
                demographicsGrid.innerHTML = `
                    <div style="text-align: center; color: #666; padding: 2rem;">
                        Select a member to view demographics
                    </div>
                `;
                summaryContent.innerHTML = `
                    <div style="text-align: center; color: #666; padding: 2rem;">
                        Select a member and prompt to generate insights
                    </div>
                `;
                resultsContainer.classList.remove('show');
            }
        }

        // Display demographics
        function displayDemographics(member) {
            const demographics = memberData[member].demographics;
            demographicsGrid.innerHTML = '';

            const demoItems = [
                { label: 'Full Name', value: demographics.name },
                { label: 'Phone Number', value: demographics.phone },
                { label: 'Email Address', value: demographics.email },
                { label: 'Address', value: demographics.address },
                { label: 'Age', value: demographics.age + ' years' },
                { label: 'Gender', value: demographics.gender },
                { label: 'Policy ID', value: demographics.policyId },
                { label: 'Effective Date', value: demographics.effectiveDate },
                { label: 'Expiration Date', value: demographics.expirationDate }
            ];

            demoItems.forEach(item => {
                const demoItem = document.createElement('div');
                demoItem.className = 'demo-item';
                demoItem.innerHTML = `
                    <span class="demo-label">${item.label}:</span>
                    <span class="demo-value">${item.value}</span>
                `;
                demographicsGrid.appendChild(demoItem);
            });
        }

        // Display loading animation
        function showLoading() {
            summaryContent.innerHTML = `
                <div class="loading">
                    <div class="loading-spinner"></div>
                    <div class="loading-text">Analyzing Member Data...</div>
                    <div class="loading-subtext">AI is processing information and generating insights</div>
                </div>
            `;
        }

        // Generate analysis
        function generateAnalysis() {
            const selectedMember = memberSelect.value;
            const selectedPrompt = promptSelect.value;

            if (!selectedMember || !selectedPrompt) {
                alert('Please select both a member and an analysis type.');
                return;
            }

            // Show results container
            resultsContainer.classList.add('show');
            
            // Show loading animation
            showLoading();
            
            // Disable submit button
            submitBtn.disabled = true;
            submitBtn.textContent = 'Generating...';

            // Simulate AI processing time (3-5 seconds)
            const processingTime = Math.random() * 2000 + 3000; // 3-5 seconds

            setTimeout(() => {
                // Display the analysis
                const analysis = memberData[selectedMember].prompts[selectedPrompt];
                summaryContent.innerHTML = analysis.summary;
                
                // Re-enable submit button
                submitBtn.disabled = false;
                submitBtn.textContent = 'Generate Analysis';
            }, processingTime);
        }

        // Event listeners
        memberSelect.addEventListener('change', updatePromptOptions);
        submitBtn.addEventListener('click', generateAnalysis);

        // Initialize
        createParticles();
    </script>
</body>
</html>
